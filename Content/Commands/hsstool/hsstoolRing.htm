<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="1994" MadCap:lastWidth="882">
    <head>
    </head>
    <body>
        <h1>hsstool ring</h1>
        <p class="TopicTag" MadCap:conditions="General.Online">[Command]</p>
        <p>This <MadCap:xref href="hsstoolOverview.htm" target="_popup">hsstool </MadCap:xref> command provides status information for each of the dozens or hundreds of virtual nodes (vNodes) in your storage cluster. It is very granular and verbose. In most circumstances you will find more value in using the <MadCap:xref href="hsstoolInfo.htm">hsstool info</MadCap:xref> or <MadCap:xref href="hsstoolStatus.htm">hsstool status</MadCap:xref> commands rather than <em>ring</em>.</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead class="CloudianParentDropDown">
                <MadCap:dropDownHotspot>Command Format</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>You can run the <em>hsstool ring</em> command through the CMC UI:</p>
                <p>
                    <img src="../../Resources/Images/cmc/cluster/Advanced_ring.png" style="max-width: 8in;" />
                </p>
                <p>Or on the command line:</p><pre xml:space="preserve">[root]# /opt/cloudian/bin/hsstool [-h &lt;host&gt;] ring</pre>
                <h3>Parameters</h3>
                <p>This command supports only this parameter:</p>
                <MadCap:dropDown>
                    <MadCap:dropDownHead class="CloudianChildDropDown">
                        <MadCap:dropDownHotspot>-h &lt;host&gt; (called "Target Node" in CMC UI)</MadCap:dropDownHotspot>
                    </MadCap:dropDownHead>
                    <MadCap:dropDownBody>
                        <p>(Optional on command line; mandatory in CMC) You can use any node in the storage cluster as the target host. The command retrieves cluster-wide information that is available via any node that belongs to the cluster. Defaults to local host if you do not supply <em>-h &lt;host&gt;</em> on the command line.</p>
                    </MadCap:dropDownBody>
                </MadCap:dropDown>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead class="CloudianParentDropDown">
                <MadCap:dropDownHotspot>Command/Response Example and Response Description</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>The<em> ring</em> command results display a status line for each virtual node (vNode) in the storage cluster. By default there are 32 vNodes on each HyperStore physical host, so the <em>ring</em> command may return hundreds of lines of information. The returned information is sorted by ascending vNode token number.</p>
                <p>The example below is an excerpt from a <em>ring</em> command response for a four node HyperStore system that spans two data centers. Each of the four physical nodes has 32 vNodes, so the full response has 128 data lines. The list is sorted by ascending vNode token number. Note that although the command is submitted to a particular node ("cloudian-node1"), it returns information for the whole cluster. It doesn’t matter which node you submit the command to. Response item descriptions follow the example.</p><pre xml:space="preserve">[root]# /opt/cloudian/bin/hsstool -h cloudian-node1 ring
Address      DC   Rack Cassandra Cassandra-Load  Hss  State  Token
105.236.130.70 DC1  RAC1   Up       2.05 MB      Up  Normal 2146203117201265879150333284323068618
105.236.130.70 DC1  RAC1   Up       2.05 MB      Up  Normal 5542328528654630725776532927863868383
105.236.218.176 DC2 RAC1   Up       1.35 MB      Up  Normal 12000523287982171803377514999547780254
105.236.218.176 DC2 RAC1   Up       1.35 MB      Up  Normal 13878365488241145156735727847865047180
198.199.106.194 DC1 RAC1   Up       1.9 MB       Up  Normal 18315119863185730105557340630830311535
...
...</pre>
                <p>In the <em>ring</em> command response, each vNode’s status line consists of the following items:</p>
                <MadCap:dropDown>
                    <MadCap:dropDownHead class="CloudianChildDropDown">
                        <MadCap:dropDownHotspot>Address</MadCap:dropDownHotspot>
                    </MadCap:dropDownHead>
                    <MadCap:dropDownBody>
                        <p>IP address of the physical node on which the vNode resides.</p>
                    </MadCap:dropDownBody>
                </MadCap:dropDown>
                <MadCap:dropDown>
                    <MadCap:dropDownHead class="CloudianChildDropDown">
                        <MadCap:dropDownHotspot>DC</MadCap:dropDownHotspot>
                    </MadCap:dropDownHead>
                    <MadCap:dropDownBody>
                        <p>Data center in which the vNode resides.</p>
                    </MadCap:dropDownBody>
                </MadCap:dropDown>
                <MadCap:dropDown>
                    <MadCap:dropDownHead class="CloudianChildDropDown">
                        <MadCap:dropDownHotspot>Rack</MadCap:dropDownHotspot>
                    </MadCap:dropDownHead>
                    <MadCap:dropDownBody>
                        <p>Rack in which the vNode resides.</p>
                    </MadCap:dropDownBody>
                </MadCap:dropDown>
                <MadCap:dropDown>
                    <MadCap:dropDownHead class="CloudianChildDropDown">
                        <MadCap:dropDownHotspot>Cassandra</MadCap:dropDownHotspot>
                    </MadCap:dropDownHead>
                    <MadCap:dropDownBody>
                        <p>Cassandra Service status of the vNode. Will be one of: "Up", "Down", "Joining" (in the process of joining the cluster), "Leaving" (in the process of decommissioning or being removed from the cluster), or "?" (physical host cannot be reached). All vNodes on a physical node will have the same Cassandra status.</p>
                    </MadCap:dropDownBody>
                </MadCap:dropDown>
                <MadCap:dropDown>
                    <MadCap:dropDownHead class="CloudianChildDropDown">
                        <MadCap:dropDownHotspot>Cassandra-Load</MadCap:dropDownHotspot>
                    </MadCap:dropDownHead>
                    <MadCap:dropDownBody>
                        <p>Cassandra load for the physical host on which the vNode resides. There will be some Cassandra load even if all S3 objects are stored in the HyperStore File System or the erasure coding file system. For example, Cassandra is used for storage of object metadata and service usage data, among other things. Note that Cassandra load information is available only for the physical node as a whole; it is not available on a per-vNode basis like HSFS load information is.</p>
                    </MadCap:dropDownBody>
                </MadCap:dropDown>
                <MadCap:dropDown>
                    <MadCap:dropDownHead class="CloudianChildDropDown">
                        <MadCap:dropDownHotspot>HSS</MadCap:dropDownHotspot>
                    </MadCap:dropDownHead>
                    <MadCap:dropDownBody>
                        <p>HyperStore Service status for the vNode. Will be one of: "Up", "Down", or "?" (physical host cannot be reached). All vNodes on a physical node will have the same HSS status.</p>
                    </MadCap:dropDownBody>
                </MadCap:dropDown>
                <MadCap:dropDown>
                    <MadCap:dropDownHead class="CloudianChildDropDown">
                        <MadCap:dropDownHotspot>State</MadCap:dropDownHotspot>
                    </MadCap:dropDownHead>
                    <MadCap:dropDownBody>
                        <p>HyperStore Service state for the vNode. Will be one of: "Normal" or "Decommissioning". All vNodes on a given physical node will have the same HSS state.</p>
                    </MadCap:dropDownBody>
                </MadCap:dropDown>
                <MadCap:dropDown>
                    <MadCap:dropDownHead class="CloudianChildDropDown">
                        <MadCap:dropDownHotspot>Token</MadCap:dropDownHotspot>
                    </MadCap:dropDownHead>
                    <MadCap:dropDownBody>
                        <p>The vNode’s token (from an integer token space ranging from 0 to 2 <sup>127</sup> -1).</p>
                    </MadCap:dropDownBody>
                </MadCap:dropDown>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
    </body>
</html>