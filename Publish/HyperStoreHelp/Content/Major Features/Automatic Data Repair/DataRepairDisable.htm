<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="HyperStoreHelp.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Working with HyperStore Major Features|Automatic Data Repair">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Temporarily Disabling Scheduled Auto-Repairs</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/styles.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><span class="MCBreadcrumbsSelf">Working with HyperStore Major Features</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">Automatic Data Repair</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Temporarily Disabling Scheduled Auto-Repairs</span>
            </div>
            <h1>Temporarily Disabling Scheduled Auto-Repairs</h1>
            <p>Because auto-repair is a resource-intensive operation, it’s best not to have it running in your system at the same time as you’re performing any of these resource-intensive system operations:</p>
            <ul>
                <li value="1"><a href="../../Operations/AddNode.htm" class="MCXref xref" xrefformat="{para}">Adding a Node</a>
                </li>
                <li value="2"><a href="../../Operations/RemoveNode.htm" class="MCXref xref" xrefformat="{para}">Removing a Node</a>
                </li>
                <li value="3"><a href="../../Operations/ReplaceNode.htm" class="MCXref xref" xrefformat="{para}">Replacing a Node</a>
                </li>
            </ul>
            <p>Consequently, you should ensure that no schedule-based auto-repairs run anywhere in the cluster at the same time that you’re performing these operations.</p>
            <p>To do this, you can temporarily shut down the schedule-based auto-repair feature. You can do this either through the CMC or by using <em>hsstool</em> on the command line, whichever you prefer. The instructions that follow are oriented toward the CMC but they also indicate the corresponding command line commands.</p>
            <p class="Important" data-mc-autonum="&lt;b&gt;IMPORTANT: &lt;/b&gt;"><span class="autonumber"><span><b>IMPORTANT: </b></span></span>After you’re done with the system operation be sure to re-enable auto-repair as described at the end of these procedures.</p>
            <p class="Note" data-mc-autonum="&lt;b&gt;Note &#160;&lt;/b&gt;"><span class="autonumber"><span><b>Note &#160;</b></span></span>This procedure shuts down only the schedule-based auto-repair feature. It does not disable hinted handoff or proactive repair. Hinted handoff and proactive repair are narrower in scope and less resource-consumptive than full-scale auto-repair, and therefore it is not necessary to disable hinted handoff or proactive repair while performing system operations.</p>
            <p>All CMC functions referenced in this procedure are located on the CMC page <b>Cluster → Nodes → Advanced</b>.</p>
            <ol>
                <li value="1">Execute the maintenance command <em>autorepair</em> with the Disable option to temporarily disable the HyperStore auto-repair feature, for all storage types. This will prevent any new schedule-based auto-repairs from launching. The target node can be any node in the cluster; auto-repair will be disabled cluster-wide regardless of which node receives the command. Leave the "t &lt;type&gt;" option unspecified so that all auto-repair types (HSFS replica, EC, and Cassandra) are disabled.</li>
            </ol>
            <div class="Indent">
                <p><a class="MCPopupThumbnailLink MCPopupThumbnailHover" href="../../Resources/Images/operations/Autorepair_disable.png"><img class="MCPopupThumbnail img imgImgCloudian" data-mc-width="768" data-mc-height="296" src="../../Resources/Images/operations/Autorepair_disable_thumb_0_60.png" tabindex="" /></a>
                </p>
                <p>If using the command line rather than the CMC, the command is:</p><pre xml:space="preserve"># /opt/cloudian/bin/hsstool -h &lt;any_host_in_cluster&gt; repairqueue -enable false</pre>
            </div>
            <ol data-mc-continue="true">
                <li value="2">
                    <p>Execute the informational command <em>repairqueue</em> to retrieve the current status of the scheduled auto-repair queue. The target node can be any node in the cluster (cluster-wide information is returned regardless of which node you select).</p>
                </li>
            </ol>
            <div class="Indent">
                <p><a class="MCPopupThumbnailLink MCPopupThumbnailHover" href="../../Resources/Images/operations/Repairqueue.png"><img class="MCPopupThumbnail img imgImgCloudian" data-mc-width="780" data-mc-height="283" src="../../Resources/Images/operations/Repairqueue_thumb_0_60.png" tabindex="" /></a>
                </p>
                <p>If using the command line rather than the CMC, the command is:</p><pre># /opt/cloudian/bin/hsstool -h &lt;any_host_in_cluster&gt; repairqueue</pre>
            </div>
            <ol data-mc-continue="true">
                <li value="3">In the <em>repairqueue</em> command response check the "last repair status" for each repair type (HSFS replica, EC, and Cassandra), for each node in the cluster, and then based on the status information take the appropriate next action:</li>
            </ol>
            <div class="Indent">
                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead dropDownHeadCloudianChildDropDown"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="16" width="16" alt="Closed" data-mc-alt2="Open" />If no repairs have status INPROGRESS...</a></span>
                    <div class="MCDropDownBody dropDownBody">
                        <p>Proceed with whatever system operation you want to perform.</p>
                    </div>
                </div>
                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead dropDownHeadCloudianChildDropDown"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="16" width="16" alt="Closed" data-mc-alt2="Open" />If the only INPROGRESS repair is a Cassandra repair...</a></span>
                    <div class="MCDropDownBody dropDownBody">
                        <p>Wait several minutes and then again execute <em>repairqueue</em> to re-check the repair queue status. Cassandra repairs typically do not take more than a few minutes to complete.</p>
                        <p>Once no repairs have status INPROGRESS, proceed with whatever system operation you want to perform.</p>
                    </div>
                </div>
                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead dropDownHeadCloudianChildDropDown"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="16" width="16" alt="Closed" data-mc-alt2="Open" />If an HSFS replica or EC repair has status INPROGRESS...</a></span>
                    <div class="MCDropDownBody dropDownBody">
                        <p>An HSFS replica or EC repair can potentially take many hours to complete, depending on your S3 data volume. If an HSFS replica or EC auto-repair is currently running on one of the nodes in your cluster you have two options:</p>
                        <ul>
                            <li value="1">Wait for the repair to complete</li>
                            <li value="2">Abort the repair</li>
                        </ul>
                        <p>Before deciding you can check the progress of the node repair to see what portion of the repair work has been completed so far. Execute the informational command <em>opstatus</em>, with the "Target Node" set to be the node on which the repair is currently running:</p>
                        <p><a class="MCPopupThumbnailLink MCPopupThumbnailHover" href="../../Resources/Images/operations/Opstatus.png"><img class="MCPopupThumbnail img imgImgCloudian" data-mc-width="768" data-mc-height="240" src="../../Resources/Images/operations/Opstatus_thumb_0_60.png" tabindex="" /></a>
                        </p>
                        <p>If using the command line rather than the CMC, the command is:</p><pre># /opt/cloudian/bin/hsstool -h &lt;host_being_repaired&gt; opstatus</pre>
                        <p>The command response will show when the repair operation started and an estimated completion time.</p>
                        <p>If you decide that you want to abort the operation, execute the maintenance command <em>repair</em> (or <em>repairec</em> if it’s an EC repair) with the "stop" check-box selected. Leave the "Options" radio button set to "default" and set the "Target Node" to be the node on which the repair is currently running:</p>
                        <p><a class="MCPopupThumbnailLink MCPopupThumbnailHover" href="../../Resources/Images/operations/Repair_stop.png"><img class="MCPopupThumbnail img imgImgCloudian" data-mc-width="766" data-mc-height="336" src="../../Resources/Images/operations/Repair_stop_thumb_0_60.png" tabindex="" /></a>
                        </p>
                        <p>If using the command line rather than the CMC, the command is (if it’s an EC repair replace "repair" with "repairec"):</p><pre xml:space="preserve"># /opt/cloudian/bin/hsstool -h &lt;host_being_repaired&gt; repair -stop</pre>
                        <p>After stopping the repair, you can then execute <em>repairqueue</em> again to confirm that the repair has been stopped.</p>
                        <p>Once no repairs have status INPROGRESS, proceed with whatever system operation you want to perform.</p>
                        <p class="Note" data-mc-autonum="&lt;b&gt;Note &#160;&lt;/b&gt;"><span class="autonumber"><span><b>Note &#160;</b></span></span>If you abort an in-progress auto-repair on a node, that particular auto-repair job (for example, HSFS replica repair on node-5) will be placed at the head of the auto-repair queue when you subsequently re-enable auto-repair. When the repair does execute it will perform the repair from scratch — it will not resume from where the aborted repair job left off.</p>
                    </div>
                </div>
            </div>
            <h2>Re-Enabling the Auto-Repair Feature</h2>
            <p>After the system operation that you’re performing is completed (such as adding a node and rebalancing data), execute the maintenance command <em>autorepair</em> to re-enable the HyperStore auto-repair feature for all storage types. The target node can be any node in the cluster. Leave the "t &lt;type&gt;" option unspecified so that all repair types (HSFS replica, EC, and Cassandra) are enabled.</p>
            <p><a class="MCPopupThumbnailLink MCPopupThumbnailHover" href="../../Resources/Images/operations/Autorepair_enable.png"><img class="MCPopupThumbnail img imgImgCloudian" data-mc-width="765" data-mc-height="293" src="../../Resources/Images/operations/Autorepair_enable_thumb_0_60.png" tabindex="" /></a>
            </p>
            <p>If using the command line rather than the CMC, the command is:</p><pre xml:space="preserve"># /opt/cloudian/bin/hsstool -h &lt;any_host_in_cluster&gt; repairqueue -enable true</pre>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
        </div>
    </body>
</html>